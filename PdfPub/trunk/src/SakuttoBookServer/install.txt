
■システムアップデート
# yum update

■Rubyインストール ./configureに必要
# yum install gcc
# yum install libyaml
# yum install libyaml-devel
# yum install zlib-devel
# yum install readline-devel

■Rubyインストール
# mkdir ~/tmp
# cd ~/tmp
# wget ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.3-p194.tar.gz
# tar xzf ruby-1.9.3-p194.tar.gz
# cd ruby-1.9.3-p194
# ./configure
# make
# make test
# make install
# ruby -v

■RubyGemsインストール
# cd ~/tmp
# wget http://rubyforge.org/frs/download.php/76073/rubygems-1.8.24.tgz
# tar xvzf rubygems-1.8.24.tgz
# cd rubygems-1.8.24
# ruby setup.rb
# gem -v

■Railsインストール時、gemでエラーがでる場合
# yum install zlib-devel
# cd ~/tmp/ruby-1.9.3-p194/ext/zlib
# ruby extconf.rb --with-zlib-include=/usr/include -with-zlib-lib=/usr/lib
# make
# make install

■Railsインストール(3.2.6)
# gem i rails --no-rdoc --no-ri
# rails -v

■MySQLインストール
yum install mysql-server
/etc/init.d/mysqld start
chkconfig mysqld on

●Apache(httpd)インストール
yum install httpd
service httpd start
chkconfig httpd on

パスワード設定(まだ設定していない)
# mysqladmin -u root password 'パスワード'


■ImageMagick, Rmagickのインストール
# yum install ImageMagick ImageMagick-devel
# yum erase ImageMagick ImageMagick-devel
↑バージョンが古いのでやらなくていい？

バージョンが古いのでソースからインストール
# cd ~/tmp
# wget ftp://ftp.u-aizu.ac.jp/pub/graphics/image/ImageMagick/imagemagick.org/ImageMagick-6.8.0-6.tar.gz
# tar zxvf ImageMagick-6.8.0-6.tar.gz
# cd ImageMagick-6.8.0-6
# ./configure
# ./configure --enable-shared
# make
# make install

フォントもインストール(不要か？)
# cd ~/tmp
# wget http://www.mjmwired.net/resources/files/msttcorefonts-2.0-1.noarch.rpm
# rpm -ivh msttcorefonts-2.0-1.noarch.rpm
# ln -s /usr/share/fonts/msttcorefonts/ /usr/share/fonts/default/TrueType
　（または）
# yum install ttmkfdir
# wget http://www.cabextract.org.uk/cabextract-1.2-1.i386.rpm
# rpm -U cabextract-1.2-1.i386.rpm
# wget http://corefonts.sourceforge.net/msttcorefonts-2.0-1.spec
# rpmbuild -bb msttcorefonts-2.0-1.spec   (ここでエラー)
# cd /usr/src/redhat/RPMS/noarch
# rpm -ivh msttcorefonts-2.0-1.noarch.rpm


データベース作成
# mysql -u root -p
mysql> create database ｢app名]_development;
mysql> \q
#

■Passengerインストール
# gem install passenger
Passengerインストールに必要なものをインストール
# yum -y install gcc-c++ curl-devel openssl-devel zlib-devel httpd-devel apr-devel apr-util-devel
# cd ~/tmp/ruby-1.9.3-p194/ext/openssl
# ruby extconf.rb
# make
# make install
# passenger-install-apache2-module

設定ファイルを作成
# find / -type f name mod_passenger.so
# vi /etc/httpd/conf.d/passenger.conf

LoadModule passenger_module /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.18/ext/apache2/mod_passenger.so
PassengerRoot /usr/local/lib/ruby/gems/1.9.1/gems/passenger-3.0.18
PassengerRuby /usr/local/bin/ruby

#RailsEnv development # developmentの時

NameVirtualHost xxx.xxx.xxx.xxx

<VirtualHost xxx.xxx.xxx.xxx>
   ServerName  example.com
   DocumentRoot /var/www/passenger/[アプリ名]/public

   <Directory "/var/www/passenger/[アプリ名]/public">
    Satisfy Any
    Allow from any
   </Directory>
   PassengerEnabled on
   RailsBaseURI /
</VirtualHost>


# mkdir /var/www/passenger
/var/www/passenger/[アプリ名] にソースをコピー
# cd /var/www/passenger
# unzip epubs-1112.zip
# mv epubs-1112 epubs
# cd epubs
# ls
Gamefile      Rakefile   config     db   lib  public  test  vendor
README.rdoc   app        config.ru  doc  log  script  tmp
# 

●初回起動の準備
# yum install mysql-server
# find /usr/local -name MagickCOre.pc
/usr/local/lib/pkgconfig/MagickCore.pc
# export PKG_CONFIG_PATH=/usr/local/lib/pkgconfig
# env | grep PKG_CONFIG_PATH
PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

■productionモードでサーバ起動
# cd /var/www/passenger/[アプリ名]
# vi config/database.yml
データベースのパスワードを記入。コロンの後ろは半角スペース１つ開ける。developerとtestとproductionの３セクションに分かれているので注意。
# bundle install
…
Your bundle is complete! Use `bundle show [gemname]` to see where a bundled gem is installed.
#
# rake db:create RAILS_ENV=production
# rake db:migrate RAILS_ENV=production
# rake assets:precompile
# service httpd restart

■rails c でエラーの場合(readline-develのインストール)
# yum install readline-devel
# cd ~/tmp/ruby-1.9.3-p194/ext/readline
# ruby extconf.rb
# make
# make install



●再インストール時の手順
・/var/www/passenger/sbss にファイルを展開
・sbss/config/database.yml で、データベースのパスワードを設定
　production: の所の記述を編集する。
・cd sbss （bundleコマンドはカレントディレクトリのみを対象としているため）
・bundle install
・rake _0.8.7_ assets:precompile
・chmod 777 sbss/log
・chmod 777 sbss/tmp
・chmod 777 sbss/public/upload
・ service httpd restart

・データベースのスキーマ変更していた場合は、
# rake db:create RAILS_ENV=production
# rake db:migrate RAILS_ENV=production

rake db:migrate:reset // DBリセット
rake db:seed          // ダミーデータ作成
